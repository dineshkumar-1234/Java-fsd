package phase;

class ListNode {
	int data;
	ListNode next;
	
	public ListNode(int data) {
		this.data = data;
		this.next = null;
		}
	}

class LinkedList {
	private ListNode head;
	public LinkedList() {
		this.head = null;
		}

	public void insert(int data) {
		ListNode newNode = new ListNode(data);
		if (head == null) {
			head = newNode;
			}
		else {
			ListNode current = head;
			while (current.next != null) {
				current = current.next;
				}
			current.next = newNode;
			}
		}
	
	public void delete(int key) {
		if (head == null) {
			return;
			}
		
		if (head.data == key) {
			head = head.next;
			return;
			}
		
		ListNode current = head;
		while (current.next != null && current.next.data != key) {
			current = current.next;
			}
		
		if (current.next != null) {
			current.next = current.next.next;
			}
		}
	
	public void display() {
		ListNode current = head;
		while (current != null) {
			System.out.print(current.data + " ");
			current = current.next;
			}
		System.out.println();
		}
	}

public class SinglyLinkedList {
	public static void main(String[] args) {
		LinkedList list = new LinkedList();
				list.insert(1);
				list.insert(2);
				list.insert(3);
				list.insert(4);
				list.insert(5);
				
				System.out.println("Original Linked List:");
				list.display();
				
				int keyToDelete = 3;
				list.delete(keyToDelete);
				
				System.out.println("Linked List after deleting " + keyToDelete + ":");
				list.display();
				}
}
